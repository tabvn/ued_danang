{"ast":null,"code":"var _jsxFileName = \"/Users/toan/Code/ued_danang/web/src/components/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport routes from \"../routers\";\nimport RenderRoute from \"./RenderRoute\";\nimport { apolloClient, JWT_TOKEN_KEY } from \"../client\";\nimport { AppProvider } from \"../context\";\nimport { ME_QUERY } from \"../graphqls/query/me\";\nimport AppSpin from \"./AppSpin\";\nimport NotFound from \"../pages/notfound\";\n\nconst App = () => {\n  const token = localStorage.getItem(JWT_TOKEN_KEY);\n  const [user, setUser] = useState();\n  const [currentPermission, setCurrentPermissions] = useState();\n  const [loading, setLoading] = useState(!!token);\n  const initialState = {\n    currentPermission,\n    user,\n    permissions: currentPermission\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"login\":\n        localStorage.setItem(JWT_TOKEN_KEY, action.payload.id);\n        return { ...state,\n          user: action.payload.user,\n          permissions: action.payload.permissions ? action.payload.permissions : []\n        };\n\n      case \"logout\":\n        localStorage.removeItem(JWT_TOKEN_KEY);\n        apolloClient.clearStore();\n        return { ...state,\n          user: null,\n          currentPermission: null\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  useEffect(() => {\n    if (token) {\n      apolloClient.query({\n        query: ME_QUERY\n      }).then(({\n        data\n      }) => {\n        setUser(data.viewer.user);\n        setLoading(false);\n      }).catch(e => {\n        localStorage.removeItem(JWT_TOKEN_KEY);\n        setUser(null);\n        setLoading(false);\n      });\n    }\n  }, [token]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(AppSpin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let arr = [];\n\n  let getRoutes = items => {\n    let middleArr = [];\n\n    for (let i = 0; i < items.length; i++) {\n      middleArr.push(items[i]);\n\n      if (items[i].child) {\n        middleArr = [...middleArr, ...getRoutes(items[i].child)];\n      }\n    }\n\n    return middleArr;\n  };\n\n  for (let i = 0; i < routes.length; i++) {\n    arr.push(routes[i]);\n\n    if (routes[i].child) {\n      arr = [...arr, ...getRoutes(routes[i].child)];\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(AppProvider, {\n    initialState: initialState,\n    reducer: reducer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, arr.filter(route => route.path).map((route, index) => /*#__PURE__*/React.createElement(RenderRoute, Object.assign({\n    key: index\n  }, route, {\n    routeKey: route.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/toan/Code/ued_danang/web/src/components/App.js"],"names":["React","useEffect","useState","BrowserRouter","Switch","Route","ApolloProvider","routes","RenderRoute","apolloClient","JWT_TOKEN_KEY","AppProvider","ME_QUERY","AppSpin","NotFound","App","token","localStorage","getItem","user","setUser","currentPermission","setCurrentPermissions","loading","setLoading","initialState","permissions","reducer","state","action","type","setItem","payload","id","removeItem","clearStore","query","then","data","viewer","catch","e","arr","getRoutes","items","middleArr","i","length","push","child","filter","route","path","map","index","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport routes from \"../routers\";\nimport RenderRoute from \"./RenderRoute\";\nimport { apolloClient, JWT_TOKEN_KEY } from \"../client\";\nimport { AppProvider } from \"../context\";\nimport { ME_QUERY } from \"../graphqls/query/me\";\nimport AppSpin from \"./AppSpin\";\nimport NotFound from \"../pages/notfound\";\nconst App = () => {\n  const token = localStorage.getItem(JWT_TOKEN_KEY);\n  const [user, setUser] = useState();\n  const [currentPermission, setCurrentPermissions] = useState();\n  const [loading, setLoading] = useState(!!token);\n  const initialState = {\n    currentPermission,\n    user,\n    permissions: currentPermission,\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"login\":\n        localStorage.setItem(JWT_TOKEN_KEY, action.payload.id);\n        return {\n          ...state,\n          user: action.payload.user,\n          permissions: action.payload.permissions\n            ? action.payload.permissions\n            : [],\n        };\n      case \"logout\":\n        localStorage.removeItem(JWT_TOKEN_KEY);\n        apolloClient.clearStore();\n        return {\n          ...state,\n          user: null,\n          currentPermission: null,\n        };\n      default:\n        return state;\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      apolloClient\n        .query({\n          query: ME_QUERY,\n        })\n        .then(({ data }) => {\n          setUser(data.viewer.user);\n          setLoading(false);\n        })\n        .catch((e) => {\n          localStorage.removeItem(JWT_TOKEN_KEY);\n          setUser(null);\n          setLoading(false);\n        });\n    }\n  }, [token]);\n  if (loading) {\n    return <AppSpin />;\n  }\n  let arr = [];\n  let getRoutes = (items) => {\n    let middleArr = [];\n    for (let i = 0; i < items.length; i++) {\n      middleArr.push(items[i]);\n      if (items[i].child) {\n        middleArr = [...middleArr, ...getRoutes(items[i].child)];\n      }\n    }\n    return middleArr;\n  };\n  for (let i = 0; i < routes.length; i++) {\n    arr.push(routes[i]);\n    if (routes[i].child) {\n      arr = [...arr, ...getRoutes(routes[i].child)];\n    }\n  }\n  return (\n    <AppProvider initialState={initialState} reducer={reducer}>\n      <ApolloProvider client={apolloClient}>\n        <BrowserRouter>\n          <Switch>\n            {arr\n              .filter((route) => route.path)\n              .map((route, index) => (\n                <RenderRoute key={index} {...route} routeKey={route.key} />\n              ))}\n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </ApolloProvider>\n    </AppProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}