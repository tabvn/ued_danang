{"ast":null,"code":"import * as React from 'react';\nimport Portal from \"rc-util/es/PortalWrapper\";\nimport Dialog from './Dialog'; // fix issue #10656\n\n/*\n * getContainer remarks\n * Custom container should not be return, because in the Portal component, it will remove the\n * return container element here, if the custom container is the only child of it's component,\n * like issue #10656, It will has a conflict with removeChild method in react-dom.\n * So here should add a child (div element) to custom container.\n * */\n\nvar DialogWrap = function DialogWrap(props) {\n  var visible = props.visible,\n      getContainer = props.getContainer,\n      forceRender = props.forceRender; // 渲染在当前 dom 里；\n\n  if (getContainer === false) {\n    return React.createElement(Dialog, Object.assign({}, props, {\n      getOpenCount: function getOpenCount() {\n        return 2;\n      }\n    }));\n  }\n\n  return React.createElement(Portal, {\n    visible: visible,\n    forceRender: forceRender,\n    getContainer: getContainer\n  }, function (childProps) {\n    return React.createElement(Dialog, Object.assign({}, props, childProps));\n  });\n};\n\nDialogWrap.displayName = 'Dialog';\nexport default DialogWrap;","map":{"version":3,"sources":["/Users/toan/Code/ued_danang/web/node_modules/rc-image/node_modules/rc-dialog/es/DialogWrap.js"],"names":["React","Portal","Dialog","DialogWrap","props","visible","getContainer","forceRender","createElement","Object","assign","getOpenCount","childProps","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAA+B;;AAE/B;;;;;;;;AAQA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC1C,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AAAA,MACIC,YAAY,GAAGF,KAAK,CAACE,YADzB;AAAA,MAEIC,WAAW,GAAGH,KAAK,CAACG,WAFxB,CAD0C,CAGL;;AAErC,MAAID,YAAY,KAAK,KAArB,EAA4B;AAC1B,WAAON,KAAK,CAACQ,aAAN,CAAoBN,MAApB,EAA4BO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC1DO,MAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,eAAO,CAAP;AACD;AAHyD,KAAzB,CAA5B,CAAP;AAKD;;AAED,SAAOX,KAAK,CAACQ,aAAN,CAAoBP,MAApB,EAA4B;AACjCI,IAAAA,OAAO,EAAEA,OADwB;AAEjCE,IAAAA,WAAW,EAAEA,WAFoB;AAGjCD,IAAAA,YAAY,EAAEA;AAHmB,GAA5B,EAIJ,UAAUM,UAAV,EAAsB;AACvB,WAAOZ,KAAK,CAACQ,aAAN,CAAoBN,MAApB,EAA4BO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyBQ,UAAzB,CAA5B,CAAP;AACD,GANM,CAAP;AAOD,CApBD;;AAsBAT,UAAU,CAACU,WAAX,GAAyB,QAAzB;AACA,eAAeV,UAAf","sourcesContent":["import * as React from 'react';\nimport Portal from \"rc-util/es/PortalWrapper\";\nimport Dialog from './Dialog'; // fix issue #10656\n\n/*\n * getContainer remarks\n * Custom container should not be return, because in the Portal component, it will remove the\n * return container element here, if the custom container is the only child of it's component,\n * like issue #10656, It will has a conflict with removeChild method in react-dom.\n * So here should add a child (div element) to custom container.\n * */\n\nvar DialogWrap = function DialogWrap(props) {\n  var visible = props.visible,\n      getContainer = props.getContainer,\n      forceRender = props.forceRender; // 渲染在当前 dom 里；\n\n  if (getContainer === false) {\n    return React.createElement(Dialog, Object.assign({}, props, {\n      getOpenCount: function getOpenCount() {\n        return 2;\n      }\n    }));\n  }\n\n  return React.createElement(Portal, {\n    visible: visible,\n    forceRender: forceRender,\n    getContainer: getContainer\n  }, function (childProps) {\n    return React.createElement(Dialog, Object.assign({}, props, childProps));\n  });\n};\n\nDialogWrap.displayName = 'Dialog';\nexport default DialogWrap;"]},"metadata":{},"sourceType":"module"}