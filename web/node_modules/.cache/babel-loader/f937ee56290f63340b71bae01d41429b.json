{"ast":null,"code":"var _jsxFileName = \"/Users/toan/Code/ued_danang/web/src/components/LoginForm.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Input } from \"antd\";\nimport { LOGIN_MUTATION } from \"../graphqls/mutation/login\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useAppValue } from \"../context\";\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    span: 24\n  }\n};\n\nconst LoginForm = ({\n  onDone,\n  onError\n}) => {\n  const [, dispatch] = useAppValue();\n  const [login, {\n    loading\n  }] = useMutation(LOGIN_MUTATION);\n\n  const onFinish = values => {\n    login({\n      variables: values,\n      update: (proxy, {\n        data\n      }) => {\n        dispatch({\n          type: \"login\",\n          payload: data.login\n        });\n        onDone(data.login);\n      }\n    }).catch(e => {\n      if (onError) {\n        onError(e);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      type: \"email\",\n      message: \"The input is not valid E-mail!\"\n    }, {\n      required: true,\n      message: \"Please input your E-mail!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input your password!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: \"100%\",\n      marginTop: 20\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nLoginForm.propTypes = {\n  onDone: PropTypes.func,\n  onError: PropTypes.func\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/toan/Code/ued_danang/web/src/components/LoginForm.js"],"names":["React","PropTypes","Button","Form","Input","LOGIN_MUTATION","useMutation","useAppValue","layout","labelCol","span","wrapperCol","tailLayout","LoginForm","onDone","onError","dispatch","login","loading","onFinish","values","variables","update","proxy","data","type","payload","catch","e","remember","message","required","width","marginTop","propTypes","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Form, Input} from \"antd\";\nimport {LOGIN_MUTATION} from \"../graphqls/mutation/login\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {useAppValue} from \"../context\";\n\nconst layout = {\n    labelCol: {span: 24},\n    wrapperCol: {span: 24},\n};\nconst tailLayout = {\n    wrapperCol: {span: 24},\n};\n\nconst LoginForm = ({onDone, onError}) => {\n    const [, dispatch] = useAppValue();\n    const [login, {loading}] = useMutation(LOGIN_MUTATION);\n    const onFinish = (values) => {\n        login({\n            variables: values,\n            update: (proxy, {data}) => {\n                dispatch({\n                    type: \"login\",\n                    payload: data.login,\n                });\n                onDone(data.login);\n            },\n        }).catch((e) => {\n            if (onError) {\n                onError(e);\n            }\n        });\n    };\n    return (\n        <div>\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{remember: true}}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[\n                        {\n                            type: \"email\",\n                            message: \"The input is not valid E-mail!\",\n                        },\n                        {required: true, message: \"Please input your E-mail!\"},\n                    ]}\n                >\n                    <Input type=\"email\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{required: true, message: \"Please input your password!\"}]}\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button\n                        style={{width: \"100%\", marginTop: 20}}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        loading={loading}\n                    >\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nLoginForm.propTypes = {\n    onDone: PropTypes.func,\n    onError: PropTypes.func,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}