type Class implements Model{
	id: ID! @tag(gorm: "primaryKey")
	name: String! @tag(gorm:"uniqueIndex")
	facultyId: ID! @tag(gorm:"index")
	faculty: Faculty! @tag(gorm:"foreignKey:FacultyID")
	year: Int!
	teacherId: ID! @tag(gorm:"index")
	teacher: Teacher! @tag(gorm:"foreignKey:TeacherID")
	createdAt: Time!
	updatedAt: Time!
}
input ClassInput {
	name: String!
	facultyId: ID!
	teacherId: ID!
	year: Int!
}
type ClassConnection{
	total: Int64!
	nodes:[Class!]
}
input ClassFilter{
	search: String
	teacherId: ID
	limit: Int
	offset: Int
}
input UpdateClassInput{
	name: String
	facultyId: ID
	teacherId: ID
	year: Int
}
extend type Query {
	classes(filter:ClassFilter): ClassConnection!
	teacherClasses: [Class!]
}
extend type Mutation {
	createClass(input: ClassInput!): Class!
	updateClass(id: ID!, input: UpdateClassInput!): Class!
}