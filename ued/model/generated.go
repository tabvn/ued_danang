// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/datatypes"
	"gorm.io/gorm"
)

var DB *gorm.DB
var StdChars = []byte("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789")

func AutoMigrate(db *gorm.DB) {
	DB = db
	db.AutoMigrate(

		&ExpireToken{},
		&File{},
		&Logger{},
		&User{},
	)
}

type Model interface {
	IsModel()
}

type ExpireToken struct {
	ID        int64          `json:"id" gorm:"primaryKey"`
	Token     string         `json:"token" gorm:"uniqueIndex"`
	CreatedAt time.Time      `json:"createdAt"`
	UpdatedAt time.Time      `json:"updatedAt"`
	DeleteAt  gorm.DeletedAt `gorm:"index"`
}

func (ExpireToken) IsModel() {}

type File struct {
	ID        int64          `json:"id" gorm:"primaryKey"`
	StoreID   *int64         `json:"storeId" gorm:"index"`
	Name      string         `json:"name" gorm:"index"`
	Key       string         `json:"key" gorm:"uniqueIndex"`
	Thumbnail *string        `json:"thumbnail"`
	Cloud     string         `json:"cloud"`
	Size      int64          `json:"size"`
	Mime      string         `json:"mime"`
	Width     *int           `json:"width"`
	Height    *int           `json:"height"`
	URL       *string        `json:"url"`
	Source    *string        `json:"source"`
	Kind      string         `json:"kind"`
	CreatedAt time.Time      `json:"createdAt"`
	UpdatedAt time.Time      `json:"updatedAt"`
	DeleteAt  gorm.DeletedAt `gorm:"index"`
}

func (File) IsModel() {}

type Logger struct {
	ID        int64          `json:"id" gorm:"primaryKey"`
	Type      string         `json:"type"`
	Message   datatypes.JSON `json:"message"`
	CreatedAt time.Time      `json:"createdAt"`
	UpdatedAt time.Time      `json:"updatedAt"`
	DeleteAt  gorm.DeletedAt `gorm:"index"`
}

func (Logger) IsModel() {}

type LoggerConnection struct {
	Nodes []*Logger `json:"nodes"`
	Total int64     `json:"total"`
}

type LoggerFilter struct {
	Search *string `json:"search"`
	Limit  *int    `json:"limit"`
	Offset *int    `json:"offset"`
}

type NewUser struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Sort struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type Token struct {
	ID        string    `json:"id"`
	ExpiredAt time.Time `json:"expiredAt"`
	User      *User     `json:"user"`
}

type User struct {
	ID        int64          `json:"id" gorm:"primaryKey"`
	Email     string         `json:"email" gorm:"uniqueIndex"`
	Password  string         `json:"password"`
	CreatedAt time.Time      `json:"createdAt"`
	UpdatedAt time.Time      `json:"updatedAt"`
	DeleteAt  gorm.DeletedAt `gorm:"index"`
}

func (User) IsModel() {}

type Viewer struct {
	User *User `json:"user"`
}
